')
result2019total <- sqldf('SELECT A.IDStation, A.NameStation, A.Ammonia, R10.PM10, R25.PM25
FROM  result2019Ammonia as A, result2019PM10 as R10, result2019PM25 as R25
WHERE A.NameStation  = R10.NameStation
AND   R10.NameStation = R25.NameStation
')
result2019total <- sqldf('SELECT A.IDStation, A.NameStation, A.Ammonia, R10.PM10, R25.PM25
FROM  result2019Ammonia as A, result2019PM10 as R10, result2019PM25 as R25
WHERE A.NameStation  = R10.NameStation
AND   R10.NameStation = R25.NameStation
')
View(result2019total)
View(result2019total)
#Libraries
library(ARPALData)
library(tidyverse)
library(sqldf)
library(ggplot2)
#Data download with ARPALData
data2019 <- get_ARPA_Lombardia_AQ_data(
ID_station = NULL,
Year = 2019,
Frequency = "daily",
Var_vec = NULL,
Fns_vec = NULL,
by_sensor = 0,
verbose = T
)
data2020 <- get_ARPA_Lombardia_AQ_data(
ID_station = NULL,
Year = 2020,
Frequency = "daily",
Var_vec = NULL,
Fns_vec = NULL,
by_sensor = 0,
verbose = T
)
my_data %>%
rename(
sepal_length = Sepal.Length,
sepal_width = Sepal.Width
)
#Casting of the tables for queries
cast2019 <- data.frame(data2019)
cast2020 <- data.frame(data2020)
#Renaming the PM2.5 column
cast2019 = cast2019 %>%
rename(
PM25 =PM2.5
)
cast2020 = cast2020 %>%
rename(
PM25 =PM2.5
)
#Queries
result2019Ammonia <- sqldf('SELECT IDStation, NameStation, COUNT(*) as Ammonia
FROM  cast2019
WHERE Ammonia is null
GROUP BY IDStation')
result2019PM10 <- sqldf('SELECT IDStation, NameStation, COUNT(*) as PM10
FROM  cast2019
WHERE PM10 is null
GROUP BY IDStation')
result2019PM25 <- sqldf('SELECT IDStation, NameStation, COUNT(*) as PM25
FROM  cast2019
WHERE PM25 is null
GROUP BY IDStation')
result2019or <- sqldf('SELECT IDStation, NameStation, COUNT(*) as missing
FROM  cast2019
WHERE Ammonia is null or PM10 is null or PM25 is null
GROUP BY IDStation')
result2019total <- sqldf('SELECT A.IDStation, A.NameStation, A.Ammonia, R10.PM10, R25.PM25
FROM  result2019Ammonia as A, result2019PM10 as R10, result2019PM25 as R25
WHERE A.NameStation  = R10.NameStation
AND   R10.NameStation = R25.NameStation
')
# based on result2019or, we choose stations: 677-Cremona, 681-Moggio, 693-Sannazzaro de' Burgondi and 642-Pavia
# given that they have the least missing observations.
bestdata2019 <- sqldf('SELECT IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2019
WHERE IDStation = 677 or IDStation = 681 or IDStation = 693 or IDStation = 642
')
Cremona2019 <- sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2019
WHERE IDStation = 677
')
autoplot(ts(Cremona2019[,c(4:6)]))
plot(Cremona2019[,"Date"], Cremona2019[,"Ammonia"] )
Queries
result2020Ammonia <- sqldf('SELECT IDStation, NameStation, COUNT(*) as Ammonia
FROM  cast2020
WHERE Ammonia is null
GROUP BY IDStation')
result2020PM10 <- sqldf('SELECT IDStation, NameStation, COUNT(*) as PM10
FROM  cast2020
WHERE PM10 is null
GROUP BY IDStation')
result2020PM25 <- sqldf('SELECT IDStation, NameStation, COUNT(*) as PM25
FROM  cast2020
WHERE PM25 is null
GROUP BY IDStation')
result2020or <- sqldf('SELECT IDStation, NameStation, COUNT(*) as nada
FROM  cast2020
WHERE Ammonia is null or PM10 is null or PM25 is null
GROUP BY IDStation')
result2020total <- sqldf('SELECT A.IDStation, A.NameStation, A.Ammonia, R10.PM10, R25.PM25
FROM  result2020Ammonia as A, result2020PM10 as R10, result2020PM25 as R25
WHERE A.NameStation  = R10.NameStation
AND   R10.NameStation = R25.NameStation
')
View(result2020total)
View(result2019or)
View(result2019or)
View(bestdata2019)
View(bestdata2019)
View(cast2019)
View(cast2019)
bestdata2019 <- sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2019
WHERE IDStation = 677 or IDStation = 681 or IDStation = 693 or IDStation = 642
')
View(bestdata2019)
View(bestdata2019)
View(result2019total)
View(result2019total)
View(result2019or)
View(result2019or)
result2019total <- sqldf('SELECT A.IDStation, A.NameStation, A.Ammonia, R10.PM10, R25.PM25
FROM  result2019Ammonia as A, result2019PM10 as R10, result2019PM25 as R25
WHERE A.NameStation  = R10.NameStation
AND   R10.NameStation = R25.NameStation
ORDER BY asc
')
result2019or <- sqldf('SELECT IDStation, NameStation, COUNT(*) as nada
FROM  cast2019
WHERE Ammonia is null or PM10 is null or PM25 is null
GROUP BY IDStation
ORDER BY nada')
result2019or <- sqldf('SELECT IDStation, NameStation, COUNT(*) as nada
FROM  cast2019
WHERE Ammonia is null or PM10 is null or PM25 is null
GROUP BY IDStation
ORDER BY nada')
View(result2019or)
View(result2019or)
result2020or <- sqldf('SELECT IDStation, NameStation, COUNT(*) as nada
FROM  cast2020
WHERE Ammonia is null or PM10 is null or PM25 is null
GROUP BY IDStation
ORDER BY nada')
View(result2020or)
View(result2020or)
library(ARPALData)
#Libraries
library(ARPALData)
library(tidyverse)
library(sqldf)
library(ggplot2)
dataWeather <- get_ARPA_Lombardia_W_data(
ID_station = NULL,
Year = 2019,
Frequency = "weekly",
Var_vec = NULL,
Fns_vec = NULL,
by_sensor = 0,
verbose = T
)
library(ggplot2)
autoplot(ts(Cremona2019[,c(4:6)]))
#Libraries
library(ARPALData)
library(tidyverse)
library(sqldf)
library(ggplot2)
#Data download with ARPALData
#2019
data2019 <- get_ARPA_Lombardia_AQ_data(
ID_station = NULL,
Year = 2019,
Frequency = "daily",
Var_vec = NULL,
Fns_vec = NULL,
by_sensor = 0,
verbose = T
)
#Casting of the tables for queries
cast2019 <- data.frame(data2019)
#Renaming the PM2.5 column
cast2019 = cast2019 %>%
rename(
PM25 = PM2.5
)
#Queries 2019
result2019Ammonia <- sqldf('SELECT IDStation, NameStation, COUNT(*) as Ammonia
FROM  cast2019
WHERE Ammonia is null
GROUP BY IDStation')
result2019PM10 <- sqldf('SELECT IDStation, NameStation, COUNT(*) as PM10
FROM  cast2019
WHERE PM10 is null
GROUP BY IDStation')
result2019PM25 <- sqldf('SELECT IDStation, NameStation, COUNT(*) as PM25
FROM  cast2019
WHERE PM25 is null
GROUP BY IDStation')
result2019or <- sqldf('SELECT IDStation, NameStation, COUNT(*) as nada
FROM  cast2019
WHERE Ammonia is null or PM10 is null or PM25 is null
GROUP BY IDStation
ORDER BY nada')
result2019total <- sqldf('SELECT A.IDStation, A.NameStation, A.Ammonia, R10.PM10, R25.PM25
FROM  result2019Ammonia as A, result2019PM10 as R10, result2019PM25 as R25
WHERE A.NameStation  = R10.NameStation
AND   R10.NameStation = R25.NameStation
')
# based on result2019or, we choose stations: 677-Cremona, 681-Moggio, 693-Sannazzaro de' Burgondi and 642-Pavia
# given that they have the least missing observations.
bestdata2019 <- sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2019
WHERE IDStation = 677 or IDStation = 681 or IDStation = 693 or IDStation = 642
')
Cremona2019 <- sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2019
WHERE IDStation = 677
')
Moggio2019 <-  sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2019
WHERE IDStation = 681
')
Sannazzaro2019 <-  sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2019
WHERE IDStation = 693
')
Pavia2019 <-  sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2019
WHERE IDStation = 642
')
vettore   <-ARPALdf_Summary(data2019)
variabile <- vettore$Gap_length$Ammonia
setwd('/Users/marcovinciguerra/Github/GitTesi/DownloadData/DatiMancanti')
write_csv(result2019or, "DatiMancanti2019.csv")
#2020
data2020 <- get_ARPA_Lombardia_AQ_data(
ID_station = NULL,
Year = 2020,
Frequency = "daily",
Var_vec = NULL,
Fns_vec = NULL,
by_sensor = 0,
verbose = T
)
cast2020 <- data.frame(data2020)
cast2020 = cast2020 %>%
rename(
PM25 = PM2.5
)
autoplot(ts(Cremona2019[,c(4:6)]))
#Queries 2020
result2020Ammonia <- sqldf('SELECT IDStation, NameStation, COUNT(*) as Ammonia
FROM  cast2020
WHERE Ammonia is null
GROUP BY IDStation')
result2020PM10 <- sqldf('SELECT IDStation, NameStation, COUNT(*) as PM10
FROM  cast2020
WHERE PM10 is null
GROUP BY IDStation')
result2020PM25 <- sqldf('SELECT IDStation, NameStation, COUNT(*) as PM25
FROM  cast2020
WHERE PM25 is null
GROUP BY IDStation')
result2020or <- sqldf('SELECT IDStation, NameStation, COUNT(*) as nada
FROM  cast2020
WHERE Ammonia is null or PM10 is null or PM25 is null
GROUP BY IDStation
ORDER BY nada')
result2020total <- sqldf('SELECT A.IDStation, A.NameStation, A.Ammonia, R10.PM10, R25.PM25
FROM  result2020Ammonia as A, result2020PM10 as R10, result2020PM25 as R25
WHERE A.NameStation  = R10.NameStation
AND   R10.NameStation = R25.NameStation
')
#Comment for result2020or:
#There are 7 control units with an acceptable number of missing data
#1: 693 Sannazzaro de' Burgondi - AGIP, missing data: 31
#2: 681 Moggio, missing data: 37
#3: 705 Milano - Pascal CittÃ  Studi, missing data: 39
#4: 677 Cremona - Via Fatebenefratelli, missing data: 59
#5: 642 Pavia - via Folperti, missing data: 71
#6: 703 Schivenoglia, missing data:79
bestdata2020 <- sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2020
WHERE IDStation = 693 or IDStation = 681 or IDStation = 705 or IDStation = 677
or IDStation = 642 or IDStation = 703
')
Sannazzaro2020 <- sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2020
WHERE IDStation = 693
')
Moggio2020 <- sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2020
WHERE IDStation = 681
')
Milano2020<-sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2020
WHERE IDStation = 705
')
Cremona2020<- sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2020
WHERE IDStation = 677
')
Pavia2020<-sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2020
WHERE IDStation = 693
')
Schivenoglia2020<-sqldf('SELECT Date, IDStation, NameStation, Ammonia, PM10, PM25
FROM cast2020
WHERE IDStation = 703
')
setwd('/Users/marcovinciguerra/Github/GitTesi/DownloadData/DatiMancanti')
write_csv(result2020or, "DatiMancanti2020.csv")
#Plot and save of the graphs
autoplot(ts(Cremona2019[,c(4:6)]))
setwd('/Users/marcovinciguerra/Github/GitTesi/DownloadData/DatiMancanti/PlotDati/2019')
#2019
jpeg(file="Moggio2019.jpeg")
plot(Cremona2019[,"Date"], Cremona2019[,"Ammonia"] )
dev.off()
jpeg(file="Sannazzaro2019.jpeg")
plot(Sannazzaro2019[,"Date"], Sannazzaro2019[,"Ammonia"] )
dev.off()
jpeg(file="Pavia2019.jpeg")
plot(Pavia2019[,"Date"], Pavia2019[,"Ammonia"] )
dev.off()
#2020
setwd('/Users/marcovinciguerra/Github/GitTesi/DownloadData/DatiMancanti/PlotDati/2020')
jpeg(file="Sannazzaro2020.jpeg")
plot(Sannazzaro2020[,"Date"], Sannazzaro2020[,"Ammonia"] )
dev.off()
jpeg(file="Moggio2020.jpeg")
plot(Moggio2020[,"Date"], Moggio2020[,"Ammonia"] )
dev.off()
jpeg(file="Milano2020.jpeg")
plot(Milano2020[,"Date"], Milano2020[,"Ammonia"] )
dev.off()
jpeg(file="Cremona2020.jpeg")
plot(Cremona2020[,"Date"], Cremona2020[,"Ammonia"] )
dev.off()
jpeg(file="Pavia2020.jpeg")
plot(Pavia2020[,"Date"], Pavia2020[,"Ammonia"] )
dev.off()
jpeg(file="Schivenoglia2020.jpeg")
plot(Schivenoglia2020[,"Date"], Schivenoglia2020[,"Ammonia"] )
dev.off()
#2019 mixed with 2020
result2019 = result2019or
result2020 = result2020or
total2019_2020 <- sqldf('SELECT r19.IDStation, r19.NameStation, sum(r19.nada)+sum(r20.nada) as nada
FROM result2019 as r19 JOIN result2020 as r20
ON r19.IDStation = r20.IDStation
GROUP BY r19.IDStation
ORDER BY nada
')
setwd('/Users/marcovinciguerra/Github/GitTesi/DownloadData/DatiMancanti')
write_csv(total2019_2020, "DatiMancanti20192020Combinati.csv")
install.packages("ggfortify")
all2019 <- NULL
all2019[[1]] <- Cremona2019
all2019[[2]] <- Moggio2019
all2019[[3]] <- Sannazzaro2019
all2019[[4]] <- Pavia2019
vettore   <-ARPALdf_Summary(data2019)
variabile <- vettore$Gap_length$Ammonia
#Plot and save of the graphs
for (i in 1:length(all2019)) {
c9a <- ggplot(all2019[[i]], aes(x = Date, y = Ammonia)) +
geom_line()  + labs(title = paste(all2019[[i]][1,3],"2019"))
nada <- is.na(all2019[[i]]["Ammonia"])
c9a <- c9a + geom_vline(xintercept = all2019[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.5)
c910 <- ggplot(all2019[[i]], aes(x = Date, y = PM10)) +
geom_line()
nada <- is.na(all2019[[i]]["PM10"])
c910 <- c910 + geom_vline(xintercept = all2019[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.5)
c925 <- ggplot(all2019[[i]], aes(x = Date, y = PM25)) +
geom_line()
nada <- is.na(all2019[[i]]["PM25"])
c925 <- c925 + geom_vline(xintercept = all2019[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.7)
jpeg(filename =paste(all2019[[i]][1,3],"2019.jpeg"),width = 1280, height = 720 )
multiplot(c9a, c910, c925)
dev.off()
}
all2019 <- NULL
all2019[[1]] <- Cremona2019
all2019[[2]] <- Moggio2019
all2019[[3]] <- Sannazzaro2019
all2019[[4]] <- Pavia2019
vettore   <-ARPALdf_Summary(data2019)
variabile <- vettore$Gap_length$Ammonia
#Plot and save of the graphs
for (i in 1:length(all2019)) {
c9a <- ggplot(all2019[[i]], aes(x = Date, y = Ammonia)) +
geom_line()  + labs(title = paste(all2019[[i]][1,3],"2019"))
nada <- is.na(all2019[[i]]["Ammonia"])
c9a <- c9a + geom_vline(xintercept = all2019[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.5)
c910 <- ggplot(all2019[[i]], aes(x = Date, y = PM10)) +
geom_line()
nada <- is.na(all2019[[i]]["PM10"])
c910 <- c910 + geom_vline(xintercept = all2019[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.5)
c925 <- ggplot(all2019[[i]], aes(x = Date, y = PM25)) +
geom_line()
nada <- is.na(all2019[[i]]["PM25"])
c925 <- c925 + geom_vline(xintercept = all2019[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.7)
jpeg(filename =paste(all2019[[i]][1,3],"2019.jpeg"),width = 1280, height = 720 )
multiplot(c9a, c910, c925)
dev.off()
}
library(ggplot2)
all2019 <- NULL
all2019[[1]] <- Cremona2019
all2019[[2]] <- Moggio2019
all2019[[3]] <- Sannazzaro2019
all2019[[4]] <- Pavia2019
vettore   <-ARPALdf_Summary(data2019)
variabile <- vettore$Gap_length$Ammonia
#Plot and save of the graphs
for (i in 1:length(all2019)) {
c9a <- ggplot(all2019[[i]], aes(x = Date, y = Ammonia)) +
geom_line()  + labs(title = paste(all2019[[i]][1,3],"2019"))
nada <- is.na(all2019[[i]]["Ammonia"])
c9a <- c9a + geom_vline(xintercept = all2019[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.5)
c910 <- ggplot(all2019[[i]], aes(x = Date, y = PM10)) +
geom_line()
nada <- is.na(all2019[[i]]["PM10"])
c910 <- c910 + geom_vline(xintercept = all2019[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.5)
c925 <- ggplot(all2019[[i]], aes(x = Date, y = PM25)) +
geom_line()
nada <- is.na(all2019[[i]]["PM25"])
c925 <- c925 + geom_vline(xintercept = all2019[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.7)
jpeg(filename =paste(all2019[[i]][1,3],"2019.jpeg"),width = 1280, height = 720 )
multiplot(c9a, c910, c925)
dev.off()
}
#Libraries
library(ARPALData)
library(tidyverse)
library(sqldf)
library(ggplot2)
library(ggfortify)
all2020 <- NULL
all2020[[1]] <- Sannazzaro2020
all2020[[2]] <- Moggio2020
all2020[[3]] <- Milano2020
all2020[[4]] <- Cremona2020
all2020[[5]] <- Pavia2020
all2020[[6]] <- Schivenoglia2020
for (i in 1:length(all2020)) {
c9a <- ggplot(all2020[[i]], aes(x = Date, y = Ammonia)) +
geom_line()  + labs(title = paste(all2020[[i]][1,3],"2020"))
nada <- is.na(all2020[[i]]["Ammonia"])
c9a <- c9a + geom_vline(xintercept = all2020[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.5)
c910 <- ggplot(all2020[[i]], aes(x = Date, y = PM10)) +
geom_line()
nada <- is.na(all2020[[i]]["PM10"])
c910 <- c910 + geom_vline(xintercept = all2020[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.5)
c925 <- ggplot(all2020[[i]], aes(x = Date, y = PM25)) +
geom_line()
nada <- is.na(all2020[[i]]["PM25"])
c925 <- c925 + geom_vline(xintercept = all2020[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.7)
jpeg(filename =paste(all2020[[i]][1,3],"2020.jpeg"),width = 1280, height = 720 )
multiplot(c9a, c910, c925)
dev.off()
}
all2019 <- NULL
all2019[[1]] <- Cremona2019
all2019[[2]] <- Moggio2019
all2019[[3]] <- Sannazzaro2019
all2019[[4]] <- Pavia2019
vettore   <-ARPALdf_Summary(data2019)
variabile <- vettore$Gap_length$Ammonia
#Plot and save of the graphs
for (i in 1:length(all2019)) {
c9a <- ggplot(all2019[[i]], aes(x = Date, y = Ammonia)) +
geom_line()  + labs(title = paste(all2019[[i]][1,3],"2019"))
nada <- is.na(all2019[[i]]["Ammonia"])
c9a <- c9a + geom_vline(xintercept = all2019[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.5)
c910 <- ggplot(all2019[[i]], aes(x = Date, y = PM10)) +
geom_line()
nada <- is.na(all2019[[i]]["PM10"])
c910 <- c910 + geom_vline(xintercept = all2019[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.5)
c925 <- ggplot(all2019[[i]], aes(x = Date, y = PM25)) +
geom_line()
nada <- is.na(all2019[[i]]["PM25"])
c925 <- c925 + geom_vline(xintercept = all2019[[i]][nada,1], alpha = 0.3,
color = "blue", size=1.7)
jpeg(filename = paste(all2019[[i]][1,3],"2019.jpeg"),width = 1280, height = 720 )
#multiplot(c9a, c910, c925)
dev.off()
}
View(all2019)
View(all2019)
